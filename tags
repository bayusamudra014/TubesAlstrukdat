!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/malifpy/Alif/Git/TubesAlstrukdat/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
./bin/mobilita	Makefile	/^.\/bin\/mobilita: $(NMAIN_OBJ) $(BUILD_SRC)\/main.o$/;"	t
./bin/test	Makefile	/^.\/bin\/test: ${TESTING_OBJ} $(NMAIN_OBJ)$/;"	t
./build/src/%.o	Makefile	/^.\/build\/src\/%.o: .\/src\/%.c .\/src\/%.h$/;"	t
./build/src/%.o	Makefile	/^.\/build\/src\/%.o: .\/src\/%.c$/;"	t
./build/test/%.o	Makefile	/^.\/build\/test\/%.o: .\/test\/%.c$/;"	t
0	.vscode/launch.json	/^        {$/;"	o	array:configurations.0.setupCommands
0	.vscode/launch.json	/^        {$/;"	o	array:configurations.1.setupCommands
0	.vscode/launch.json	/^      "args": ["-tno-fork"],$/;"	s	array:configurations.1.args
0	.vscode/launch.json	/^    {$/;"	o	array:configurations
0	.vscode/tasks.json	/^      "args": ["clean", ".\/bin\/test"]$/;"	s	array:tasks.1.args
0	.vscode/tasks.json	/^      "args": ["clean", "debug"],$/;"	s	array:tasks.0.args
0	.vscode/tasks.json	/^    {$/;"	o	array:tasks
1	.vscode/launch.json	/^    {$/;"	o	array:configurations
1	.vscode/tasks.json	/^      "args": ["clean", ".\/bin\/test"]$/;"	s	array:tasks.1.args
1	.vscode/tasks.json	/^      "args": ["clean", "debug"],$/;"	s	array:tasks.0.args
1	.vscode/tasks.json	/^    {$/;"	o	array:tasks
ADT_NAME	run_adt.ps1	/^$ADT_NAME=$args[0]$/;"	v
ADV	src/lib/loadex/mesinkar.c	/^void ADV() {$/;"	f	typeref:typename:void
ADVSTDIN	src/lib/loadex/mesinkar.c	/^void ADVSTDIN()$/;"	f	typeref:typename:void
Absis	src/lib/prototype/order/building/building.h	/^#define Absis(/;"	d
Aturan Kontribusi	README.md	/^## Aturan Kontribusi$/;"	s	chapter:Mobilita
BG_BLACK	src/lib/console/pcolor/pcolor.h	/^#define BG_BLACK /;"	d
BG_BLUE	src/lib/console/pcolor/pcolor.h	/^#define BG_BLUE /;"	d
BG_BRIGHT_BLUE	src/lib/console/pcolor/pcolor.h	/^#define BG_BRIGHT_BLUE /;"	d
BG_BRIGHT_CYAN	src/lib/console/pcolor/pcolor.h	/^#define BG_BRIGHT_CYAN /;"	d
BG_BRIGHT_GREEN	src/lib/console/pcolor/pcolor.h	/^#define BG_BRIGHT_GREEN /;"	d
BG_BRIGHT_MAGENTA	src/lib/console/pcolor/pcolor.h	/^#define BG_BRIGHT_MAGENTA /;"	d
BG_BRIGHT_RED	src/lib/console/pcolor/pcolor.h	/^#define BG_BRIGHT_RED /;"	d
BG_BRIGHT_WHITE	src/lib/console/pcolor/pcolor.h	/^#define BG_BRIGHT_WHITE /;"	d
BG_BRIGHT_YELLOW	src/lib/console/pcolor/pcolor.h	/^#define BG_BRIGHT_YELLOW /;"	d
BG_CYAN	src/lib/console/pcolor/pcolor.h	/^#define BG_CYAN /;"	d
BG_GRAY	src/lib/console/pcolor/pcolor.h	/^#define BG_GRAY /;"	d
BG_GREEN	src/lib/console/pcolor/pcolor.h	/^#define BG_GREEN /;"	d
BG_MAGENTA	src/lib/console/pcolor/pcolor.h	/^#define BG_MAGENTA /;"	d
BG_RED	src/lib/console/pcolor/pcolor.h	/^#define BG_RED /;"	d
BG_WHITE	src/lib/console/pcolor/pcolor.h	/^#define BG_WHITE /;"	d
BG_YELLOW	src/lib/console/pcolor/pcolor.h	/^#define BG_YELLOW /;"	d
BIN_OBJ	Makefile	/^BIN_OBJ = $(patsubst %.c,build\/%.o,$(BIN_SRC))$/;"	m
BIN_SRC	Makefile	/^BIN_SRC = $(shell find src -name "*.c")$/;"	m
BUILD_FLAG	Makefile	/^BUILD_FLAG = -lm$/;"	m
BUILD_SRC	Makefile	/^BUILD_SRC = .\/build\/src$/;"	m
BUILD_TEST	Makefile	/^BUILD_TEST = .\/build\/test$/;"	m
BufferSource	src/lib/charmachine/charmachine.h	/^typedef char BufferSource;$/;"	t	typeref:typename:char
Building	src/lib/prototype/order/building/building.h	/^} Building;$/;"	t	typeref:struct:building
CC	Makefile	/^CC = gcc$/;"	m
CC	src/lib/loadex/mesinkar.c	/^char CC;$/;"	v	typeref:typename:char
CFLAG	Makefile	/^CFLAG = -Wall -std=c99$/;"	m
CHAR_LINEBREAK	src/lib/charmachine/charmachine.h	/^#define CHAR_LINEBREAK /;"	d
CHAR_WHITESPACE	src/lib/charmachine/charmachine.h	/^#define CHAR_WHITESPACE /;"	d
Col	src/lib/game/map/map.h	/^#define Col(/;"	d
Color	src/lib/console/pcolor/pcolor.h	/^typedef char* Color;$/;"	t	typeref:typename:char *
CreateItem	src/lib/structure/stack/main_stack.c	/^SEltype CreateItem(){$/;"	f	typeref:typename:SEltype
CreateOrder	src/lib/structure/linkedlist/main_linkedlist.c	/^LlEltype CreateOrder(){$/;"	f	typeref:typename:LlEltype
CreateOrder	src/lib/structure/queue/main_queue.c	/^QEltype CreateOrder(){$/;"	f	typeref:typename:QEltype
DECORATOR_BOLD	src/lib/console/console.h	/^#define DECORATOR_BOLD /;"	d
DECORATOR_REVERSED	src/lib/console/console.h	/^#define DECORATOR_REVERSED /;"	d
DECORATOR_UNDERLINE	src/lib/console/console.h	/^#define DECORATOR_UNDERLINE /;"	d
Dapat Kendala saat menjalankan Script?	README.md	/^#### Dapat Kendala saat menjalankan Script?$/;"	t	subsection:Mobilita""Kompilasi dan Run Program""Menjalankan Main Point dari ADT
Decorator	src/lib/console/console.h	/^typedef char* Decorator;$/;"	t	typeref:typename:char *
DlEltype	src/lib/structure/dynamiclist/dynamiclist.h	/^typedef Building DlEltype;$/;"	t	typeref:typename:Building
DynamicList	src/lib/structure/dynamiclist/dynamiclist.h	/^} DynamicList;$/;"	t	typeref:struct:dynamiclist
EOP	src/lib/loadex/mesinkar.c	/^boolean EOP;$/;"	v	typeref:typename:boolean
EXEC_PATH	run_adt.ps1	/^      $EXEC_PATH = $RESULT[0].FullName$/;"	v
EXT	run_adt.ps1	/^      $EXT=$RESULT[0].Extension$/;"	v
FILE_LOCATION	run_adt.ps1	/^    $FILE_LOCATION = $LOCATION[0].FullName$/;"	v
FIRST	src/lib/structure/linkedlist/linkedlist.h	/^#define FIRST(/;"	d
Gadget	src/lib/prototype/gadget/gadget.h	/^}Gadget;$/;"	t	typeref:struct:gadget
H_BOOLEAN	src/lib/boolean.h	/^#define H_BOOLEAN$/;"	d
H_BUILDING	src/lib/prototype/order/building/building.h	/^#define H_BUILDING$/;"	d
H_BUY_PAGE	src/views/buy/buy_page.h	/^#define H_BUY_PAGE$/;"	d
H_CHAR_MACHINE	src/lib/charmachine/charmachine.h	/^#define H_CHAR_MACHINE$/;"	d
H_CHAR_MACHINE_TEST	test/charmachine/test.h	/^#define H_CHAR_MACHINE_TEST$/;"	d
H_COMPONENTS	src/components/components.h	/^#define H_COMPONENTS$/;"	d
H_CONSOLE	src/lib/console/console.h	/^#define H_CONSOLE$/;"	d
H_C_MODAL	src/components/modal/modal.h	/^#define H_C_MODAL$/;"	d
H_DROPOFF_PAGE	src/views/dropoff/dropoff_page.h	/^#define H_DROPOFF_PAGE$/;"	d
H_DYNAMICLIST_TEST	test/dynamiclist/test.h	/^#define H_DYNAMICLIST_TEST$/;"	d
H_DYNAMIC_LIST	src/lib/structure/dynamiclist/dynamiclist.h	/^#define H_DYNAMIC_LIST$/;"	d
H_FILE	src/lib/file/file.h	/^#define H_FILE$/;"	d
H_GADGET	src/lib/prototype/gadget/gadget.h	/^#define H_GADGET$/;"	d
H_GAME	src/lib/game/game.h	/^#define H_GAME$/;"	d
H_INVENTORY_GADGET	src/lib/game/inventory_gadget/inventory_gadget.h	/^#define H_INVENTORY_GADGET$/;"	d
H_INVENTORY_PAGE	src/views/inventory/inventory.h	/^#define H_INVENTORY_PAGE$/;"	d
H_ITEM	src/lib/prototype/order/item/item.h	/^#define H_ITEM$/;"	d
H_LIB	src/lib/lib.h	/^#define H_LIB$/;"	d
H_LINKED_LIST	src/lib/structure/linkedlist/linkedlist.h	/^#define H_LINKED_LIST$/;"	d
H_LOADEX	src/lib/loadex/loadex.h	/^#define H_LOADEX$/;"	d
H_LOAD_SAVE_VIEWS	src/views/load_save/load_save_page.h	/^#define H_LOAD_SAVE_VIEWS$/;"	d
H_MAIN_MENU	src/views/mainmenu/mainmenu.h	/^#define H_MAIN_MENU$/;"	d
H_MAP	src/lib/game/map/map.h	/^#define H_MAP$/;"	d
H_MATRIX	src/lib/structure/matrix/matrix.h	/^#define H_MATRIX$/;"	d
H_MATRIX_TEST	test/matrix/test.h	/^#define H_MATRIX_TEST$/;"	d
H_MOVE_PAGE	src/views/map/map_page.h	/^#define H_MOVE_PAGE$/;"	d
H_NODE	src/lib/structure/node/node.h	/^#define H_NODE$/;"	d
H_ORDER	src/lib/prototype/order/order.h	/^#define H_ORDER$/;"	d
H_ORDER_LIST	src/lib/game/orderlist/orderlist.h	/^#define H_ORDER_LIST$/;"	d
H_PAGE_RETURN	src/views/return/return_page.h	/^#define H_PAGE_RETURN$/;"	d
H_PCOLOR	src/lib/console/pcolor/pcolor.h	/^#define H_PCOLOR$/;"	d
H_PICKUO_RETURN	src/views/pickup/pickup_page.h	/^#define H_PICKUO_RETURN$/;"	d
H_POINT	src/lib/prototype/order/building/point/point.h	/^#define H_POINT$/;"	d
H_POINT_TEST	test/point/test.h	/^#define H_POINT_TEST$/;"	d
H_PROGRESS_LIST	src/lib/game/progress_list/progress_list.h	/^#define H_PROGRESS_LIST$/;"	d
H_PROGRESS_VIEWS	src/views/progress/progress.h	/^#define H_PROGRESS_VIEWS$/;"	d
H_PROTOTYPE	src/lib/structure/structure.h	/^#define H_PROTOTYPE$/;"	d
H_PROTOTYPE_MOBILITA	src/lib/prototype/prototype.h	/^#define H_PROTOTYPE_MOBILITA$/;"	d
H_QUEUE	src/lib/structure/queue/queue.h	/^#define H_QUEUE$/;"	d
H_STACK	src/lib/structure/stack/stack.h	/^#define H_STACK$/;"	d
H_STATIC_LIST	src/lib/structure/staticlist/staticlist.h	/^#define H_STATIC_LIST$/;"	d
H_STATUS_GAME	src/lib/status_game/status_game.h	/^#define H_STATUS_GAME$/;"	d
H_TAS	src/lib/game/tas/tas.h	/^#define H_TAS$/;"	d
H_TD_LIST	src/lib/game/td_list/td_list.h	/^#define H_TD_LIST$/;"	d
H_TIME	src/lib/prototype/order/time/time.h	/^#define H_TIME$/;"	d
H_TODO_TEST	test/todolist/test.h	/^#define H_TODO_TEST$/;"	d
H_TO_DO_VIEWS	src/views/to_do/to_do_page.h	/^#define H_TO_DO_VIEWS$/;"	d
H_VIEWS	src/views/views.h	/^#define H_VIEWS$/;"	d
H_WORD_MACHINE	src/lib/wordmachine/wordmachine.h	/^#define H_WORD_MACHINE$/;"	d
H_WORD_MACHINE_TEST	test/wordmachine/test.h	/^#define H_WORD_MACHINE_TEST$/;"	d
IDX_UNDEF	src/lib/structure/structure.h	/^#define IDX_UNDEF /;"	d
INFO	src/lib/structure/node/node.h	/^#define INFO(/;"	d
Install gcc dan make	README.md	/^### Install gcc dan make$/;"	S	section:Mobilita""Setup Environment
Install libcheck	README.md	/^### Install libcheck$/;"	S	section:Mobilita""Setup Environment
Item	src/lib/prototype/order/item/item.h	/^} Item;$/;"	t	typeref:struct:item
Kompilasi dan Run Program	README.md	/^## Kompilasi dan Run Program$/;"	s	chapter:Mobilita
LOCATION	run_adt.ps1	/^  $LOCATION = Get-ChildItem -Path ".\/src" -Recurse main_$ADT_NAME.c$/;"	v
LinkedList	src/lib/structure/linkedlist/linkedlist.h	/^typedef struct node* LinkedList;$/;"	t	typeref:struct:node *
LlEltype	src/lib/structure/linkedlist/linkedlist.h	/^typedef Order LlEltype;$/;"	t	typeref:typename:Order
MARK	src/lib/loadex/mesinkar.h	/^#define MARK /;"	d
MEltype	src/lib/structure/matrix/matrix.h	/^typedef int MEltype;$/;"	t	typeref:typename:int
MIMode	.vscode/launch.json	/^      "MIMode": "gdb",$/;"	s	object:configurations.0
MIMode	.vscode/launch.json	/^      "MIMode": "gdb",$/;"	s	object:configurations.1
M_MAX_SIZE	src/lib/structure/matrix/matrix.h	/^#define M_MAX_SIZE /;"	d
Map	src/lib/game/map/map.h	/^} Map;$/;"	t	typeref:struct:map
Matrix	src/lib/structure/matrix/matrix.h	/^} Matrix;$/;"	t	typeref:struct:matrix
Melakukan Kompilasi	README.md	/^### Melakukan Kompilasi$/;"	S	section:Mobilita""Kompilasi dan Run Program
Menggunakan Powershell	README.md	/^#### Menggunakan Powershell$/;"	t	subsection:Mobilita""Kompilasi dan Run Program""Menjalankan Main Point dari ADT
Menjalankan Main Point dari ADT	README.md	/^### Menjalankan Main Point dari ADT$/;"	S	section:Mobilita""Kompilasi dan Run Program
Menjalankan Program	README.md	/^### Menjalankan Program$/;"	S	section:Mobilita""Kompilasi dan Run Program
Mobilita	README.md	/^# Mobilita$/;"	c
NEXT	src/lib/structure/node/node.h	/^#define NEXT(/;"	d
NMAIN_OBJ	Makefile	/^NMAIN_OBJ = $(patsubst %.c,build\/%.o,$(NMAIN_SRC))$/;"	m
NMAIN_SRC	Makefile	/^NMAIN_SRC = $(shell find src -name "*.c"  ! -name "main_*" ! -name "main.c")$/;"	m
Node	src/lib/structure/node/node.h	/^} Node;$/;"	t	typeref:struct:node
Order	src/lib/prototype/order/order.h	/^} Order;$/;"	t	typeref:struct:order
OrderList	src/lib/game/orderlist/orderlist.h	/^typedef Queue OrderList;$/;"	t	typeref:typename:Queue
Ordinat	src/lib/prototype/order/building/building.h	/^#define Ordinat(/;"	d
PRJOCET_BIN	Makefile	/^PRJOCET_BIN = listpost$/;"	m
PROJECT_MANAGER	Makefile	/^PROJECT_MANAGER = project$/;"	m
Pembuatan Prosedur atau Fungsi Implementasi	CONTRIBUTE.md	/^### Pembuatan Prosedur atau Fungsi Implementasi$/;"	S	section:Traktat Kontribusi""Penulisan Program
Penamaan	CONTRIBUTE.md	/^### Penamaan$/;"	S	section:Traktat Kontribusi""Penulisan Program
Penulisan Program	CONTRIBUTE.md	/^## Penulisan Program$/;"	s	chapter:Traktat Kontribusi
Penulisan Unit Test	CONTRIBUTE.md	/^## Penulisan Unit Test$/;"	s	chapter:Traktat Kontribusi
PlElType	src/lib/game/progress_list/progress_list.h	/^typedef Order PlElType;$/;"	t	typeref:typename:Order
Point	src/lib/prototype/order/building/point/point.h	/^} Point;$/;"	t	typeref:struct:point
ProgressList	src/lib/game/progress_list/progress_list.h	/^typedef LinkedList ProgressList;$/;"	t	typeref:typename:LinkedList
QEltype	src/lib/structure/queue/queue.h	/^typedef Order QEltype;$/;"	t	typeref:typename:Order
Q_HEAD	src/lib/structure/queue/queue.h	/^#define     Q_HEAD(/;"	d
Q_IDX_HEAD	src/lib/structure/queue/queue.h	/^#define Q_IDX_HEAD(/;"	d
Q_IDX_TAIL	src/lib/structure/queue/queue.h	/^#define Q_IDX_TAIL(/;"	d
Q_SIZE	src/lib/structure/queue/queue.h	/^#define Q_SIZE /;"	d
Q_TAIL	src/lib/structure/queue/queue.h	/^#define     Q_TAIL(/;"	d
Queue	src/lib/structure/queue/queue.h	/^} Queue;$/;"	t	typeref:struct:queue
RESULT	run_adt.ps1	/^    $RESULT = Get-ChildItem -Path ".\/bin" ADT_RUNNER*$/;"	v
Row	src/lib/game/map/map.h	/^#define Row(/;"	d
SEltype	src/lib/structure/stack/stack.h	/^typedef Item SEltype;$/;"	t	typeref:typename:Item
SG_OL	src/lib/status_game/status_game.h	/^#define SG_OL(/;"	d
SG_TAS	src/lib/status_game/status_game.h	/^#define SG_TAS(/;"	d
SG_TDL	src/lib/status_game/status_game.h	/^#define SG_TDL(/;"	d
SG_TIME	src/lib/status_game/status_game.h	/^#define SG_TIME(/;"	d
SL_CAPACITY	src/lib/structure/staticlist/staticlist.h	/^#define SL_CAPACITY /;"	d
SOURCE_FILE	src/lib/charmachine/charmachine.h	/^#define SOURCE_FILE /;"	d
SOURCE_STRING	src/lib/charmachine/charmachine.h	/^#define SOURCE_STRING /;"	d
START	src/lib/loadex/mesinkar.c	/^void START(const char* filename) {$/;"	f	typeref:typename:void
STARTSTDIN	src/lib/loadex/mesinkar.c	/^void STARTSTDIN()$/;"	f	typeref:typename:void
START_TEST	test/charmachine/test_buffer.c	/^START_TEST(tc_cm_buffer_1) {$/;"	f
START_TEST	test/charmachine/test_buffer.c	/^START_TEST(tc_cm_buffer_2) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/charmachine/test_buffer.c	/^START_TEST(tc_cm_buffer_3) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/charmachine/test_file.c	/^START_TEST(tc_cm_file_1) {$/;"	f
START_TEST	test/charmachine/test_file.c	/^START_TEST(tc_cm_file_2) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/charmachine/test_file.c	/^START_TEST(tc_cm_file_3) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/dynamiclist/test_konstruktor.c	/^START_TEST(tc_dl_konstruktor_1){$/;"	f
START_TEST	test/dynamiclist/test_konstruktor.c	/^START_TEST(tc_dl_konstruktor_2){$/;"	f	typeref:typename:END_TEST
START_TEST	test/dynamiclist/test_operasi.c	/^START_TEST(tc_dl_operasi_1) {$/;"	f
START_TEST	test/dynamiclist/test_operasi.c	/^START_TEST(tc_dl_operasi_2) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/dynamiclist/test_operasi.c	/^START_TEST(tc_dl_operasi_3) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/dynamiclist/test_operasi.c	/^START_TEST(tc_dl_operasi_4) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/matrix/test_constructor.c	/^START_TEST(tc_m_konstruktor_1)$/;"	f
START_TEST	test/matrix/test_constructor.c	/^START_TEST(tc_m_konstruktor_2)$/;"	f	typeref:typename:END_TEST
START_TEST	test/matrix/test_constructor.c	/^START_TEST(tc_m_konstruktor_3)$/;"	f	typeref:typename:END_TEST
START_TEST	test/matrix/test_selector.c	/^START_TEST(tc_m_selektor_1) {$/;"	f
START_TEST	test/point/test_equality.c	/^START_TEST(tc_p_equality_1){$/;"	f
START_TEST	test/point/test_equality.c	/^START_TEST(tc_p_equality_2){$/;"	f	typeref:typename:END_TEST
START_TEST	test/point/test_equality.c	/^START_TEST(tc_p_equality_3){$/;"	f	typeref:typename:END_TEST
START_TEST	test/point/test_konstruktor.c	/^START_TEST(tc_p_konstruktor_1){$/;"	f
START_TEST	test/todolist/test_constructor.c	/^START_TEST(tc_td_konstruktor_1)$/;"	f
START_TEST	test/todolist/test_insert_remove.c	/^START_TEST(tc_td_insert)$/;"	f	typeref:typename:END_TEST
START_TEST	test/todolist/test_insert_remove.c	/^START_TEST(tc_td_insert_from_empty)$/;"	f
START_TEST	test/todolist/test_insert_remove.c	/^START_TEST(tc_td_remove)$/;"	f	typeref:typename:END_TEST
START_TEST	test/todolist/test_insert_remove.c	/^START_TEST(tc_td_remove_idx)$/;"	f	typeref:typename:END_TEST
START_TEST	test/todolist/test_insert_remove.c	/^START_TEST(tc_td_remove_into_empty)$/;"	f	typeref:typename:END_TEST
START_TEST	test/todolist/test_insert_remove.c	/^START_TEST(tc_td_remove_then_insert)$/;"	f	typeref:typename:END_TEST
START_TEST	test/wordmachine/test_file.c	/^START_TEST(tc_wm_file_1) {$/;"	f
START_TEST	test/wordmachine/test_file.c	/^START_TEST(tc_wm_file_2) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/wordmachine/test_file.c	/^START_TEST(tc_wm_file_3) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/wordmachine/test_file.c	/^START_TEST(tc_wm_file_4) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/wordmachine/test_file.c	/^START_TEST(tc_wm_file_5) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/wordmachine/test_file.c	/^START_TEST(tc_wm_file_6) {$/;"	f	typeref:typename:END_TEST
START_TEST	test/wordmachine/test_file.c	/^START_TEST(tc_wm_file_7) {$/;"	f	typeref:typename:END_TEST
STREAM_CONSOLE	src/lib/charmachine/charmachine.h	/^#define STREAM_CONSOLE /;"	d
STREAM_STDIN	src/lib/charmachine/charmachine.h	/^#define STREAM_STDIN /;"	d
S_IDX_TOP	src/lib/structure/stack/stack.h	/^#define S_IDX_TOP(/;"	d
S_MAX_SIZE	src/lib/structure/stack/stack.h	/^#define S_MAX_SIZE /;"	d
S_TOP	src/lib/structure/stack/stack.h	/^#define S_TOP(/;"	d
Setup Environment	README.md	/^## Setup Environment$/;"	s	chapter:Mobilita
SlEltype	src/lib/structure/staticlist/staticlist.h	/^typedef Gadget SlEltype;$/;"	t	typeref:typename:Gadget
Stack	src/lib/structure/stack/stack.h	/^} Stack;$/;"	t	typeref:struct:stack
StaticList	src/lib/structure/staticlist/staticlist.h	/^} StaticList;$/;"	t	typeref:struct:staticlist
StatusGame	src/lib/status_game/status_game.h	/^typedef struct StatusGame {$/;"	s
StatusGame	src/lib/status_game/status_game.h	/^} StatusGame;$/;"	t	typeref:struct:StatusGame
Struktur Project	CONTRIBUTE.md	/^### Struktur Project$/;"	S	section:Traktat Kontribusi""Penulisan Program
Stuktur Project	README.md	/^## Stuktur Project$/;"	s	chapter:Mobilita
TESTING_FILE	Makefile	/^TESTING_FILE = $(shell find test -name "*.c")$/;"	m
TESTING_OBJ	Makefile	/^TESTING_OBJ = $(patsubst %.c,build\/%.o,$(TESTING_FILE))$/;"	m
TEST_FLAG	Makefile	/^TEST_FLAG = -lcheck -lcheck -lm -lpthread -lrt -lsubunit -std=c99 -lsubunit -lgcov -coverage$/;"	m
TEXT_BLACK	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BLACK /;"	d
TEXT_BLUE	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BLUE /;"	d
TEXT_BRIGHT_BLUE	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BRIGHT_BLUE /;"	d
TEXT_BRIGHT_CYAN	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BRIGHT_CYAN /;"	d
TEXT_BRIGHT_GREEN	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BRIGHT_GREEN /;"	d
TEXT_BRIGHT_MAGENTA	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BRIGHT_MAGENTA /;"	d
TEXT_BRIGHT_RED	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BRIGHT_RED /;"	d
TEXT_BRIGHT_WHITE	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BRIGHT_WHITE /;"	d
TEXT_BRIGHT_YELLOW	src/lib/console/pcolor/pcolor.h	/^#define TEXT_BRIGHT_YELLOW /;"	d
TEXT_CYAN	src/lib/console/pcolor/pcolor.h	/^#define TEXT_CYAN /;"	d
TEXT_GRAY	src/lib/console/pcolor/pcolor.h	/^#define TEXT_GRAY /;"	d
TEXT_GREEN	src/lib/console/pcolor/pcolor.h	/^#define TEXT_GREEN /;"	d
TEXT_MAGENTA	src/lib/console/pcolor/pcolor.h	/^#define TEXT_MAGENTA /;"	d
TEXT_NORMAL	src/lib/console/pcolor/pcolor.h	/^#define TEXT_NORMAL /;"	d
TEXT_RED	src/lib/console/pcolor/pcolor.h	/^#define TEXT_RED /;"	d
TEXT_WHITE	src/lib/console/pcolor/pcolor.h	/^#define TEXT_WHITE /;"	d
TEXT_YELLOW	src/lib/console/pcolor/pcolor.h	/^#define TEXT_YELLOW /;"	d
Tas	src/lib/game/tas/tas.h	/^} Tas;$/;"	t	typeref:struct:tas
Testing Unit Test	README.md	/^### Testing Unit Test$/;"	S	section:Mobilita""Kompilasi dan Run Program
Time	src/lib/prototype/order/time/time.h	/^typedef unsigned Time;$/;"	t	typeref:typename:unsigned
ToDoList	src/lib/game/td_list/td_list.h	/^typedef LinkedList ToDoList;$/;"	t	typeref:typename:LinkedList
Traktat Kontribusi	CONTRIBUTE.md	/^# Traktat Kontribusi$/;"	c
VAL_UNDEF	src/lib/structure/structure.h	/^#define VAL_UNDEF /;"	d
WM_INIT_CAPACITY	src/lib/wordmachine/wordmachine.h	/^#define WM_INIT_CAPACITY /;"	d
WM_SIZE_EXPAND	src/lib/wordmachine/wordmachine.h	/^#define WM_SIZE_EXPAND /;"	d
WM_SIZE_MAX_FACTOR	src/lib/wordmachine/wordmachine.h	/^#define WM_SIZE_MAX_FACTOR /;"	d
WM_SIZE_MIN_FACTOR	src/lib/wordmachine/wordmachine.h	/^#define WM_SIZE_MIN_FACTOR /;"	d
WM_SIZE_SHRINK	src/lib/wordmachine/wordmachine.h	/^#define WM_SIZE_SHRINK /;"	d
Waktu_Permainan	src/lib/status_game/status_game.h	/^  Time Waktu_Permainan;$/;"	m	struct:StatusGame	typeref:typename:Time
Word	src/lib/wordmachine/wordmachine.h	/^} Word;$/;"	t	typeref:struct:word
__MESIN_KAR_H_	src/lib/loadex/mesinkar.h	/^#define __MESIN_KAR_H_$/;"	d
__RESET_COLOR	src/lib/console/pcolor/pcolor.h	/^#define __RESET_COLOR /;"	d
__anon5dfb7f810108	src/lib/loadex/loadex.h	/^{$/;"	s
__ask_input	src/views/mainmenu/mainmenu.c	/^char *__ask_input(char message[]) {$/;"	f	typeref:typename:char *
__c_flush_input	src/lib/console/console.c	/^void __c_flush_input() {$/;"	f	typeref:typename:void
__cm_adv_file	src/lib/charmachine/charmachine.c	/^void __cm_adv_file() {$/;"	f	typeref:typename:void
__cm_adv_string	src/lib/charmachine/charmachine.c	/^void __cm_adv_string() {$/;"	f	typeref:typename:void
__cm_autoclose	src/lib/charmachine/charmachine.c	/^static boolean __cm_autoclose = false;$/;"	v	typeref:typename:boolean	file:
__cm_end_char	src/lib/charmachine/charmachine.c	/^static char* __cm_end_char;$/;"	v	typeref:typename:char *	file:
__cm_end_char_ln	src/lib/charmachine/charmachine.c	/^static int __cm_end_char_ln = -1;$/;"	v	typeref:typename:int	file:
__cm_isEndChar	src/lib/charmachine/charmachine.c	/^boolean __cm_isEndChar(char c) {$/;"	f	typeref:typename:boolean
__cm_print_modal	src/components/modal/modal.c	/^void __cm_print_modal(Color headerColor, const char* title,$/;"	f	typeref:typename:void
__cm_retval	src/lib/charmachine/charmachine.c	/^static int __cm_retval;$/;"	v	typeref:typename:int	file:
__cm_set_default	src/lib/charmachine/charmachine.c	/^void __cm_set_default() {$/;"	f	typeref:typename:void
__cm_stream_source	src/lib/charmachine/charmachine.c	/^static char __cm_stream_source = SOURCE_FILE;$/;"	v	typeref:typename:char	file:
__cm_tape	src/lib/charmachine/charmachine.c	/^static void* __cm_tape;$/;"	v	typeref:typename:void *	file:
__dl_shift_left	src/lib/structure/dynamiclist/dynamiclist.c	/^void __dl_shift_left(DynamicList* dl, int idxStart) {$/;"	f	typeref:typename:void
__dl_shift_right	src/lib/structure/dynamiclist/dynamiclist.c	/^void __dl_shift_right(DynamicList* dl, int idxStart) {$/;"	f	typeref:typename:void
__i_item_id	src/lib/prototype/order/item/item.c	/^static int __i_item_id = 0;$/;"	v	typeref:typename:int	file:
__is_str_same	src/views/mainmenu/mainmenu.c	/^boolean __is_str_same(char input1[], char input2[]) {$/;"	f	typeref:typename:boolean
__mm_copyWord	src/lib/file/file.c	/^char* __mm_copyWord(Word str) {$/;"	f	typeref:typename:char *
__o_order_id	src/lib/prototype/order/order.c	/^static int __o_order_id = 0;$/;"	v	typeref:typename:int	file:
__sl_swap	src/lib/structure/staticlist/staticlist.c	/^void __sl_swap(StaticList* sl, int idx1, int idx2) {$/;"	f	typeref:typename:void
__wm_allocate	src/lib/wordmachine/wordmachine.c	/^void __wm_allocate() {$/;"	f	typeref:typename:void
__wm_allocated	src/lib/wordmachine/wordmachine.c	/^static boolean __wm_allocated = false;$/;"	v	typeref:typename:boolean	file:
__wm_blank	src/lib/wordmachine/wordmachine.c	/^static char* __wm_blank = " \\n";$/;"	v	typeref:typename:char *	file:
__wm_blank_len	src/lib/wordmachine/wordmachine.c	/^static int __wm_blank_len = 2;$/;"	v	typeref:typename:int	file:
__wm_copy_word	src/lib/wordmachine/wordmachine.c	/^void __wm_copy_word() {$/;"	f	typeref:typename:void
__wm_free	src/lib/wordmachine/wordmachine.c	/^void __wm_free() {$/;"	f	typeref:typename:void
__wm_ignore_blank	src/lib/wordmachine/wordmachine.c	/^void __wm_ignore_blank() {$/;"	f	typeref:typename:void
__wm_is_blank	src/lib/wordmachine/wordmachine.c	/^boolean __wm_is_blank(char c) {$/;"	f	typeref:typename:boolean
__wm_reallocate	src/lib/wordmachine/wordmachine.c	/^void __wm_reallocate(int size) {$/;"	f	typeref:typename:void
__wm_set_status	src/lib/wordmachine/wordmachine.c	/^void __wm_set_status() {$/;"	f	typeref:typename:void
adj	src/lib/game/map/map.h	/^    Matrix adj;$/;"	m	struct:map	typeref:typename:Matrix
adj	src/lib/game/map/map.h	/^typedef Matrix adj;$/;"	t	typeref:typename:Matrix
adj_elmt	src/lib/game/map/map.h	/^#define adj_elmt(/;"	d
all	Makefile	/^all: clear build$/;"	t
args	.vscode/launch.json	/^      "args": ["-tno-fork"],$/;"	a	object:configurations.1
args	.vscode/launch.json	/^      "args": [],$/;"	a	object:configurations.0
args	.vscode/tasks.json	/^      "args": ["clean", ".\/bin\/test"]$/;"	a	object:tasks.1
args	.vscode/tasks.json	/^      "args": ["clean", "debug"],$/;"	a	object:tasks.0
b_create_building	src/lib/prototype/order/building/building.c	/^void b_create_building(Building* B, int x, int y, char lab, char jenis) {$/;"	f	typeref:typename:void
b_display	src/lib/prototype/order/building/building.c	/^void b_display(Building B) {$/;"	f	typeref:typename:void
b_is_equal	src/lib/prototype/order/building/building.c	/^boolean b_is_equal(Building B1, Building B2) {$/;"	f	typeref:typename:boolean
boolean	src/lib/boolean.h	/^#define boolean /;"	d
buffer	src/lib/structure/dynamiclist/dynamiclist.h	/^  DlEltype* buffer;$/;"	m	struct:dynamiclist	typeref:typename:DlEltype *
buffer	src/lib/structure/matrix/matrix.h	/^  MEltype buffer[M_MAX_SIZE][M_MAX_SIZE];$/;"	m	struct:matrix	typeref:typename:MEltype[][]
buffer	src/lib/structure/queue/queue.h	/^  QEltype buffer[Q_SIZE];$/;"	m	struct:queue	typeref:typename:QEltype[]
buffer	src/lib/structure/stack/stack.h	/^  SEltype buffer[S_MAX_SIZE];$/;"	m	struct:stack	typeref:typename:SEltype[]
buffer	src/lib/structure/staticlist/staticlist.h	/^  SlEltype buffer[SL_CAPACITY];$/;"	m	struct:staticlist	typeref:typename:SlEltype[]
build	Makefile	/^build: .\/bin\/mobilita$/;"	t
build_debug	Makefile	/^build_debug: $(NMAIN_OBJ) $(BUILD_SRC)\/main.o$/;"	t
building	src/lib/prototype/order/building/building.h	/^typedef struct building {$/;"	s
buildinglist	src/lib/game/map/map.h	/^    DynamicList buildinglist;$/;"	m	struct:map	typeref:typename:DynamicList
capacity	src/lib/game/tas/tas.h	/^    int capacity;$/;"	m	struct:tas	typeref:typename:int
capacity	src/lib/structure/dynamiclist/dynamiclist.h	/^  int capacity;$/;"	m	struct:dynamiclist	typeref:typename:int
capacity	src/lib/wordmachine/wordmachine.h	/^  int capacity;$/;"	m	struct:word	typeref:typename:int
clean	Makefile	/^clean: clear$/;"	t
clear	Makefile	/^clear:$/;"	t
clear_screen	src/lib/console/console.c	/^void clear_screen() {$/;"	f	typeref:typename:void
cm_adv	src/lib/charmachine/charmachine.c	/^void cm_adv() {$/;"	f	typeref:typename:void
cm_current_char	src/lib/charmachine/charmachine.c	/^char cm_current_char;$/;"	v	typeref:typename:char
cm_eot	src/lib/charmachine/charmachine.c	/^boolean cm_eot;$/;"	v	typeref:typename:boolean
cm_modal_error	src/components/modal/modal.c	/^void cm_modal_error(const char* message) {$/;"	f	typeref:typename:void
cm_modal_info	src/components/modal/modal.c	/^void cm_modal_info(const char* message) {$/;"	f	typeref:typename:void
cm_modal_warning	src/components/modal/modal.c	/^void cm_modal_warning(const char* message) {$/;"	f	typeref:typename:void
cm_set_autoclose	src/lib/charmachine/charmachine.c	/^void cm_set_autoclose(boolean autoclose) { __cm_autoclose = autoclose; }$/;"	f	typeref:typename:void
cm_set_end_char	src/lib/charmachine/charmachine.c	/^void cm_set_end_char(char* endchar, int length) {$/;"	f	typeref:typename:void
cm_set_source	src/lib/charmachine/charmachine.c	/^void cm_set_source(BufferSource src) { __cm_stream_source = src; }$/;"	f	typeref:typename:void
cm_start	src/lib/charmachine/charmachine.c	/^void cm_start(void* buffer) {$/;"	f	typeref:typename:void
col	src/lib/game/map/map.h	/^    int col;$/;"	m	struct:map	typeref:typename:int
colEff	src/lib/structure/matrix/matrix.h	/^  int colEff;$/;"	m	struct:matrix	typeref:typename:int
command	.vscode/tasks.json	/^      "command": "make",$/;"	s	object:tasks.0
command	.vscode/tasks.json	/^      "command": "make",$/;"	s	object:tasks.1
configurations	.vscode/launch.json	/^  "configurations": [$/;"	a
contents	src/lib/wordmachine/wordmachine.h	/^  char* contents;$/;"	m	struct:word	typeref:typename:char *
create_bg_color	src/lib/console/pcolor/pcolor.c	/^Color create_bg_color(unsigned char r, unsigned char g, unsigned char b) {$/;"	f	typeref:typename:Color
create_bg_color_cd	src/lib/console/pcolor/pcolor.c	/^Color create_bg_color_cd(unsigned color) {$/;"	f	typeref:typename:Color
create_text_color	src/lib/console/pcolor/pcolor.c	/^Color create_text_color(unsigned char r, unsigned char g, unsigned char b) {$/;"	f	typeref:typename:Color
create_text_color_cd	src/lib/console/pcolor/pcolor.c	/^Color create_text_color_cd(unsigned color) {$/;"	f	typeref:typename:Color
cwd	.vscode/launch.json	/^      "cwd": "${fileDirname}",$/;"	s	object:configurations.0
cwd	.vscode/launch.json	/^      "cwd": "${fileDirname}",$/;"	s	object:configurations.1
debug	Makefile	/^debug: build_debug$/;"	t
delete_color	src/lib/console/pcolor/pcolor.c	/^void delete_color(Color color) { free(color); }/;"	f	typeref:typename:void
description	.vscode/launch.json	/^          "description": "Enable pretty-printing for gdb",$/;"	s	object:configurations.0.setupCommands.0
description	.vscode/launch.json	/^          "description": "Enable pretty-printing for gdb",$/;"	s	object:configurations.1.setupCommands.0
dl_capacity	src/lib/structure/dynamiclist/dynamiclist.c	/^int dl_capacity(DynamicList dl) { return dl.capacity; }$/;"	f	typeref:typename:int
dl_create_list	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_create_list(DynamicList* dl, int size) {$/;"	f	typeref:typename:void
dl_delete_at	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_delete_at(DynamicList* dl, DlEltype* deletedValue, int idx) {$/;"	f	typeref:typename:void
dl_delete_first	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_delete_first(DynamicList* dl, DlEltype* deletedValue) {$/;"	f	typeref:typename:void
dl_delete_last	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_delete_last(DynamicList* dl, DlEltype* deletedValue) {$/;"	f	typeref:typename:void
dl_elmt	src/lib/structure/dynamiclist/dynamiclist.h	/^#define dl_elmt(/;"	d
dl_free_list	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_free_list(DynamicList* dl) { free(dl->buffer); }$/;"	f	typeref:typename:void
dl_index_of	src/lib/structure/dynamiclist/dynamiclist.c	/^int dl_index_of(DynamicList dl, DlEltype value) {$/;"	f	typeref:typename:int
dl_insert_at	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_insert_at(DynamicList* dl, DlEltype value, int idx) {$/;"	f	typeref:typename:void
dl_insert_first	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_insert_first(DynamicList* dl, DlEltype value) {$/;"	f	typeref:typename:void
dl_insert_last	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_insert_last(DynamicList* dl, DlEltype value) {$/;"	f	typeref:typename:void
dl_is_empty	src/lib/structure/dynamiclist/dynamiclist.c	/^boolean dl_is_empty(DynamicList dl) { return dl.nEff == 0; }$/;"	f	typeref:typename:boolean
dl_is_full	src/lib/structure/dynamiclist/dynamiclist.c	/^boolean dl_is_full(DynamicList dl) { return dl.nEff == dl.capacity; }$/;"	f	typeref:typename:boolean
dl_length	src/lib/structure/dynamiclist/dynamiclist.c	/^int dl_length(DynamicList dl) { return dl.nEff; }$/;"	f	typeref:typename:int
dl_resize_list	src/lib/structure/dynamiclist/dynamiclist.c	/^void dl_resize_list(DynamicList* dl, int addSize) {$/;"	f	typeref:typename:void
dropOff	src/lib/prototype/order/order.h	/^  Building dropOff;$/;"	m	struct:order	typeref:typename:Building
dynamiclist	src/lib/structure/dynamiclist/dynamiclist.h	/^typedef struct dynamiclist {$/;"	s
environment	.vscode/launch.json	/^      "environment": [],$/;"	a	object:configurations.0
environment	.vscode/launch.json	/^      "environment": [],$/;"	a	object:configurations.1
expired	src/lib/prototype/order/item/item.h	/^  int expired;$/;"	m	struct:item	typeref:typename:int
externalConsole	.vscode/launch.json	/^      "externalConsole": false,$/;"	b	object:configurations.0
externalConsole	.vscode/launch.json	/^      "externalConsole": false,$/;"	b	object:configurations.1
f_exist	src/lib/file/file.c	/^boolean f_exist(const char* path) {$/;"	f	typeref:typename:boolean
f_len_file	src/lib/file/file.c	/^int f_len_file(const char* path) {$/;"	f	typeref:typename:int
f_read_file	src/lib/file/file.c	/^void f_read_file(const char* path, char* buffer, int size) {$/;"	f	typeref:typename:void
f_read_file_to_buffer	src/lib/file/file.c	/^char** f_read_file_to_buffer(const char* path) {$/;"	f	typeref:typename:char **
f_write_file	src/lib/file/file.c	/^void f_write_file(const char* path, const char* buffer) {$/;"	f	typeref:typename:void
false	src/lib/boolean.h	/^#define false /;"	d
g_change_state	src/lib/status_game/status_game.c	/^void g_change_state(int type, int mv) {$/;"	f	typeref:typename:void
g_set_gadget	src/lib/prototype/gadget/gadget.c	/^void g_set_gadget(Gadget *gadget, int type) {$/;"	f	typeref:typename:void
gadget	src/lib/prototype/gadget/gadget.h	/^typedef struct gadget{$/;"	s
gadgetID	src/lib/prototype/gadget/gadget.h	/^    int gadgetID;$/;"	m	struct:gadget	typeref:typename:int
group	.vscode/tasks.json	/^      "group": "build",$/;"	s	object:tasks.0
i_create_item	src/lib/prototype/order/item/item.c	/^void i_create_item(Item* i, char type, int expired) {$/;"	f	typeref:typename:void
i_is_equal	src/lib/prototype/order/item/item.c	/^boolean i_is_equal(Item i1, Item i2) {$/;"	f	typeref:typename:boolean
i_is_expired	src/lib/prototype/order/item/item.c	/^boolean i_is_expired(Item i, Time currentTime) {$/;"	f	typeref:typename:boolean
i_is_perishable	src/lib/prototype/order/item/item.c	/^boolean i_is_perishable(Item i) { return i.type == 'P'; }$/;"	f	typeref:typename:boolean
i_item_type_name	src/lib/prototype/order/item/item.c	/^char* i_item_type_name(Item i) {$/;"	f	typeref:typename:char *
idxHead	src/lib/structure/queue/queue.h	/^  int idxHead;$/;"	m	struct:queue	typeref:typename:int
idxTail	src/lib/structure/queue/queue.h	/^	int idxTail;$/;"	m	struct:queue	typeref:typename:int
idxTop	src/lib/structure/stack/stack.h	/^  int idxTop;$/;"	m	struct:stack	typeref:typename:int
ig_add_item	src/lib/game/inventory_gadget/inventory_gadget.c	/^void ig_add_item(inventory_gadget* IG, Gadget G){$/;"	f	typeref:typename:void
ig_create_ig	src/lib/game/inventory_gadget/inventory_gadget.c	/^void ig_create_ig(inventory_gadget* IG){$/;"	f	typeref:typename:void
ig_display_ig	src/lib/game/inventory_gadget/inventory_gadget.c	/^void ig_display_ig(inventory_gadget IG) {$/;"	f	typeref:typename:void
ig_take_item	src/lib/game/inventory_gadget/inventory_gadget.c	/^void ig_take_item(inventory_gadget* IG, Gadget* G){$/;"	f	typeref:typename:void
ignoreFailures	.vscode/launch.json	/^          "ignoreFailures": true$/;"	b	object:configurations.0.setupCommands.0
ignoreFailures	.vscode/launch.json	/^          "ignoreFailures": true$/;"	b	object:configurations.1.setupCommands.0
incomingTime	src/lib/prototype/order/order.h	/^  Time incomingTime;$/;"	m	struct:order	typeref:typename:Time
inventory_gadget	src/lib/game/inventory_gadget/inventory_gadget.h	/^typedef StaticList inventory_gadget;$/;"	t	typeref:typename:StaticList
inventory_gadget	src/lib/status_game/status_game.h	/^  inventory_gadget inventory_gadget;$/;"	m	struct:StatusGame	typeref:typename:inventory_gadget
isiTas	src/lib/game/tas/tas.h	/^    Stack isiTas;$/;"	m	struct:tas	typeref:typename:Stack
item	src/lib/prototype/order/item/item.h	/^typedef struct item {$/;"	s
item	src/lib/prototype/order/order.h	/^  Item item;$/;"	m	struct:order	typeref:typename:Item
itemID	src/lib/prototype/order/item/item.h	/^  int itemID;$/;"	m	struct:item	typeref:typename:int
label	.vscode/tasks.json	/^      "label": "build",$/;"	s	object:tasks.0
label	.vscode/tasks.json	/^      "label": "buildtest",$/;"	s	object:tasks.1
label	src/lib/prototype/gadget/gadget.h	/^    char label;$/;"	m	struct:gadget	typeref:typename:char
label	src/lib/prototype/order/building/building.h	/^  char label;$/;"	m	struct:building	typeref:typename:char
label	src/lib/prototype/order/building/building.h	/^#define label(/;"	d
length	src/lib/loadex/loadex.h	/^    int length;$/;"	m	struct:__anon5dfb7f810108	typeref:typename:int
length	src/lib/structure/staticlist/staticlist.h	/^  int length;$/;"	m	struct:staticlist	typeref:typename:int
length	src/lib/wordmachine/wordmachine.h	/^  int length;$/;"	m	struct:word	typeref:typename:int
linux	.vscode/launch.json	/^      "linux": {$/;"	o	object:configurations.0
linux	.vscode/launch.json	/^      "linux": {$/;"	o	object:configurations.1
ll_create_list	src/lib/structure/linkedlist/linkedlist.c	/^void ll_create_list(LinkedList *ll){$/;"	f	typeref:typename:void
ll_delete_at	src/lib/structure/linkedlist/linkedlist.c	/^void ll_delete_at(LinkedList *ll, LlEltype *deletedValue, int idx){$/;"	f	typeref:typename:void
ll_delete_first	src/lib/structure/linkedlist/linkedlist.c	/^void ll_delete_first(LinkedList *ll, LlEltype *deletedValue){$/;"	f	typeref:typename:void
ll_delete_last	src/lib/structure/linkedlist/linkedlist.c	/^void ll_delete_last(LinkedList *ll, LlEltype *deletedValue){$/;"	f	typeref:typename:void
ll_display_list	src/lib/structure/linkedlist/linkedlist.c	/^void ll_display_list(LinkedList ll){$/;"	f	typeref:typename:void
ll_get_elmt	src/lib/structure/linkedlist/linkedlist.c	/^LlEltype ll_get_elmt(LinkedList ll, int idx){$/;"	f	typeref:typename:LlEltype
ll_index_of	src/lib/structure/linkedlist/linkedlist.c	/^int ll_index_of(LinkedList ll, LlEltype value){$/;"	f	typeref:typename:int
ll_insert_at	src/lib/structure/linkedlist/linkedlist.c	/^void ll_insert_at(LinkedList* ll, LlEltype value, int idx){$/;"	f	typeref:typename:void
ll_insert_first	src/lib/structure/linkedlist/linkedlist.c	/^void ll_insert_first(LinkedList *ll, LlEltype value){$/;"	f	typeref:typename:void
ll_insert_last	src/lib/structure/linkedlist/linkedlist.c	/^void ll_insert_last(LinkedList *ll, LlEltype value){$/;"	f	typeref:typename:void
ll_is_empty	src/lib/structure/linkedlist/linkedlist.c	/^boolean ll_is_empty(LinkedList ll){$/;"	f	typeref:typename:boolean
ll_length	src/lib/structure/linkedlist/linkedlist.c	/^int ll_length(LinkedList ll) {$/;"	f	typeref:typename:int
ll_set_elmt	src/lib/structure/linkedlist/linkedlist.c	/^void ll_set_elmt(LinkedList *ll, int idx, LlEltype value){$/;"	f	typeref:typename:void
loc	src/lib/game/map/map.h	/^    char loc[22][32];$/;"	m	struct:map	typeref:typename:char[22][32]
loc	src/lib/game/map/map.h	/^#define loc(/;"	d
loc_elmt	src/lib/game/map/map.h	/^#define loc_elmt(/;"	d
loc_nEff	src/lib/game/map/map.h	/^#define loc_nEff(/;"	d
loc_type	src/lib/game/map/map.h	/^#define loc_type(/;"	d
lx_readConfigFile	src/lib/loadex/loadex.c	/^void lx_readConfigFile(char configFilename[])$/;"	f	typeref:typename:void
lx_readConfigFile_silent	src/lib/loadex/loadex.c	/^void lx_readConfigFile_silent(char configFilename[])$/;"	f	typeref:typename:void
lx_readNumber	src/lib/loadex/loadex.c	/^int lx_readNumber(char *str)$/;"	f	typeref:typename:int
m_allocate	src/lib/game/map/map.c	/^void m_allocate(Map *m, int row, int col, DynamicList bl) {$/;"	f	typeref:typename:void
m_assign	src/lib/game/map/map.c	/^void m_assign(Map *m) {$/;"	f	typeref:typename:void
m_cols_num	src/lib/structure/matrix/matrix.c	/^int m_cols_num(Matrix m)$/;"	f	typeref:typename:int
m_create_matrix	src/lib/structure/matrix/matrix.c	/^void m_create_matrix(Matrix *m, int row, int cols)$/;"	f	typeref:typename:void
m_display	src/lib/game/map/map.c	/^void m_display(Map m) {$/;"	f	typeref:typename:void
m_display_reachable	src/lib/game/map/map.c	/^void m_display_reachable(Map m) {$/;"	f	typeref:typename:void
m_elmt	src/lib/structure/matrix/matrix.h	/^#define m_elmt(/;"	d
m_elmt_x	src/lib/game/map/map.h	/^#define m_elmt_x(/;"	d
m_elmt_y	src/lib/game/map/map.h	/^#define m_elmt_y(/;"	d
m_get_idx	src/lib/game/map/map.c	/^int m_get_idx(Map m, char b) {$/;"	f	typeref:typename:int
m_rows_num	src/lib/structure/matrix/matrix.c	/^int m_rows_num(Matrix m)$/;"	f	typeref:typename:int
main	src/lib/console/main_console.c	/^int main() {$/;"	f	typeref:typename:int
main	src/lib/console/pcolor/main_pcolor.c	/^int main() {$/;"	f	typeref:typename:int
main	src/lib/game/progress_list/main_progress_list.c	/^int main(){$/;"	f	typeref:typename:int
main	src/lib/structure/linkedlist/main_linkedlist.c	/^int main (){$/;"	f	typeref:typename:int
main	src/lib/structure/queue/main_queue.c	/^int main() {$/;"	f	typeref:typename:int
main	src/lib/structure/stack/main_stack.c	/^int main(){$/;"	f	typeref:typename:int
main	src/lib/wordmachine/main_wordmachine.c	/^int main() {$/;"	f	typeref:typename:int
main	src/main.c	/^int main()$/;"	f	typeref:typename:int
main	test/main.c	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main_builder/%	Makefile	/^main_builder\/%: % $(NMAIN_OBJ)$/;"	t
map	src/lib/game/map/map.h	/^typedef struct map{$/;"	s
map_elmt	src/lib/game/map/map.h	/^#define map_elmt(/;"	d
matrix	src/lib/structure/matrix/matrix.h	/^typedef struct matrix {$/;"	s
maxLength	src/lib/loadex/loadex.h	/^#define maxLength /;"	d
mm_dashboard	src/views/mainmenu/mainmenu.c	/^void mm_dashboard() {$/;"	f	typeref:typename:void
mm_ending	src/views/mainmenu/mainmenu.c	/^void mm_ending(StatusGame s_status_game) {$/;"	f	typeref:typename:void
move	src/views/move/move.c	/^void move(StatusGame *s, int mv, boolean gadget_used, boolean bring_heavy) {$/;"	f	typeref:typename:void
move_boost	src/views/move/move.c	/^void move_boost(StatusGame *s, int mv, int curr_move) {$/;"	f	typeref:typename:void
nEff	src/lib/structure/dynamiclist/dynamiclist.h	/^  int nEff;$/;"	m	struct:dynamiclist	typeref:typename:int
n_create_node	src/lib/structure/node/node.c	/^struct node* n_create_node(Order payload) {$/;"	f	typeref:struct:node *
name	.vscode/launch.json	/^      "name": "Debug Mobilita",$/;"	s	object:configurations.0
name	.vscode/launch.json	/^      "name": "Debug TC Mobilita",$/;"	s	object:configurations.1
next	src/lib/structure/node/node.h	/^  struct node* next;$/;"	m	struct:node	typeref:struct:node *
node	src/lib/structure/node/node.h	/^typedef struct node {$/;"	s
o_create_order	src/lib/prototype/order/order.c	/^void o_create_order(Order* order, Item item, Building pickup, Building dropoff,$/;"	f	typeref:typename:void
o_get_item	src/lib/prototype/order/order.c	/^Item o_get_item(Order order) { return order.item; }/;"	f	typeref:typename:Item
o_is_equal	src/lib/prototype/order/order.c	/^boolean o_is_equal(Order order1, Order order2) {$/;"	f	typeref:typename:boolean
o_is_order_todo	src/lib/prototype/order/order.c	/^boolean o_is_order_todo(Order order, Time currentTime) {$/;"	f	typeref:typename:boolean
ol_add_order	src/lib/game/orderlist/orderlist.c	/^void ol_add_order(OrderList* ol, Order order) { q_enqueue(ol, order); }$/;"	f	typeref:typename:void
ol_create_orederlist	src/lib/game/orderlist/orderlist.c	/^void ol_create_orederlist(OrderList* ol) { q_create_queue(ol); }$/;"	f	typeref:typename:void
ol_dequeue_order	src/lib/game/orderlist/orderlist.c	/^Order ol_dequeue_order(OrderList* ol) {$/;"	f	typeref:typename:Order
ol_get_all_order	src/lib/game/orderlist/orderlist.c	/^Order* ol_get_all_order(OrderList ol) { return ol.buffer; }$/;"	f	typeref:typename:Order *
ol_get_head	src/lib/game/orderlist/orderlist.c	/^Order ol_get_head(OrderList ol) { return q_get_head(ol); }$/;"	f	typeref:typename:Order
ol_is_empty	src/lib/game/orderlist/orderlist.c	/^boolean ol_is_empty(OrderList ol) { return q_is_empty(ol); }/;"	f	typeref:typename:boolean
ol_order_count	src/lib/game/orderlist/orderlist.c	/^int ol_order_count(OrderList ol) { return q_length(ol); }$/;"	f	typeref:typename:int
order	src/lib/prototype/order/order.h	/^typedef struct order {$/;"	s
orderID	src/lib/prototype/order/order.h	/^  int orderID;$/;"	m	struct:order	typeref:typename:int
order_list	src/lib/status_game/status_game.h	/^  OrderList order_list;$/;"	m	struct:StatusGame	typeref:typename:OrderList
p_create_point	src/lib/prototype/order/building/point/point.c	/^void p_create_point(Point* titik, int x, int y) {$/;"	f	typeref:typename:void
p_getX	src/lib/prototype/order/building/point/point.h	/^#define p_getX(/;"	d
p_getY	src/lib/prototype/order/building/point/point.h	/^#define p_getY(/;"	d
p_is_equal	src/lib/prototype/order/building/point/point.c	/^boolean p_is_equal(Point P1, Point P2) {$/;"	f	typeref:typename:boolean
payload	src/lib/structure/node/node.h	/^  Order payload;$/;"	m	struct:node	typeref:typename:Order
peta_game	src/lib/status_game/status_game.h	/^  Map peta_game;$/;"	m	struct:StatusGame	typeref:typename:Map
pickUp	src/lib/prototype/order/order.h	/^  Building pickUp;$/;"	m	struct:order	typeref:typename:Building
pita	src/lib/loadex/mesinkar.c	/^static FILE * pita;$/;"	v	typeref:typename:FILE *	file:
pl_create_progress	src/lib/game/progress_list/progress_list.c	/^void pl_create_progress(ProgressList *pl) { ll_create_list(pl); }$/;"	f	typeref:typename:void
pl_delete_first	src/lib/game/progress_list/progress_list.c	/^void pl_delete_first(ProgressList *pl, PlElType *order) {$/;"	f	typeref:typename:void
pl_display_progress	src/lib/game/progress_list/progress_list.c	/^void pl_display_progress(ProgressList pl) { ll_display_list(pl); }/;"	f	typeref:typename:void
pl_insert_last	src/lib/game/progress_list/progress_list.c	/^void pl_insert_last(ProgressList *pl, PlElType order) {$/;"	f	typeref:typename:void
pl_is_empty	src/lib/game/progress_list/progress_list.c	/^boolean pl_is_empty(ProgressList pl) { return ll_is_empty(pl); }$/;"	f	typeref:typename:boolean
pl_length	src/lib/game/progress_list/progress_list.c	/^int pl_length(ProgressList pl) { return ll_length(pl); }$/;"	f	typeref:typename:int
point	src/lib/prototype/order/building/point/point.h	/^typedef struct point {$/;"	s
posisi_sekarang	src/lib/status_game/status_game.h	/^  Building posisi_sekarang;$/;"	m	struct:StatusGame	typeref:typename:Building
position	src/lib/prototype/order/building/building.h	/^  Point position;$/;"	m	struct:building	typeref:typename:Point
preLaunchTask	.vscode/launch.json	/^      "preLaunchTask": "build",$/;"	s	object:configurations.0
preLaunchTask	.vscode/launch.json	/^      "preLaunchTask": "buildtest",$/;"	s	object:configurations.1
presentation	.vscode/tasks.json	/^      "presentation": {$/;"	o	object:tasks.0
price	src/lib/prototype/gadget/gadget.h	/^    int price;$/;"	m	struct:gadget	typeref:typename:int
print_blue	src/lib/console/pcolor/pcolor.c	/^void print_blue(char c) {$/;"	f	typeref:typename:void
print_color	src/lib/console/pcolor/pcolor.c	/^void print_color(Color color, const char* string) {$/;"	f	typeref:typename:void
print_colored_char	src/lib/console/pcolor/pcolor.c	/^void print_colored_char(Color color, char c) {$/;"	f	typeref:typename:void
print_cyan	src/lib/console/pcolor/pcolor.c	/^void print_cyan(char c) {$/;"	f	typeref:typename:void
print_green	src/lib/console/pcolor/pcolor.c	/^void print_green(char c) {$/;"	f	typeref:typename:void
print_magenta	src/lib/console/pcolor/pcolor.c	/^void print_magenta(char c) {$/;"	f	typeref:typename:void
print_red	src/lib/console/pcolor/pcolor.c	/^void print_red(char c) {$/;"	f	typeref:typename:void
print_yellow	src/lib/console/pcolor/pcolor.c	/^void print_yellow(char c) {$/;"	f	typeref:typename:void
program	.vscode/launch.json	/^        "program": "${workspaceFolder}\/bin\/mobilita"$/;"	s	object:configurations.0.linux
program	.vscode/launch.json	/^        "program": "${workspaceFolder}\/bin\/test"$/;"	s	object:configurations.1.linux
program	.vscode/launch.json	/^        "program": "${workspaceRoot}\/bin\/mobilita.exe"$/;"	s	object:configurations.0.windows
program	.vscode/launch.json	/^        "program": "${workspaceRoot}\/bin\/test.exe"$/;"	s	object:configurations.1.windows
program	.vscode/launch.json	/^      "program": "${workspaceRoot}\/",$/;"	s	object:configurations.0
program	.vscode/launch.json	/^      "program": "${workspaceRoot}\/",$/;"	s	object:configurations.1
progress_dropoff	src/views/progress/progress.c	/^void progress_dropoff(StatusGame *s_status_game) {$/;"	f	typeref:typename:void
progress_list	src/lib/status_game/status_game.h	/^  ProgressList progress_list;$/;"	m	struct:StatusGame	typeref:typename:ProgressList
progress_list	src/views/progress/progress.c	/^ProgressList progress_list;$/;"	v	typeref:typename:ProgressList
progress_pickUp	src/views/progress/progress.c	/^void progress_pickUp(StatusGame *s_status_game, Order order) {$/;"	f	typeref:typename:void
pu_add_bag	src/views/pickup/pickup_page.c	/^void pu_add_bag(Order order) {$/;"	f	typeref:typename:void
pu_add_progress	src/views/pickup/pickup_page.c	/^void pu_add_progress(Order order) {$/;"	f	typeref:typename:void
pu_is_vip_taken	src/views/pickup/pickup_page.c	/^boolean pu_is_vip_taken() {$/;"	f	typeref:typename:boolean
pu_item_upper	src/views/pickup/pickup_page.c	/^Order* pu_item_upper() {$/;"	f	typeref:typename:Order *
q_create_queue	src/lib/structure/queue/queue.c	/^void q_create_queue(Queue* q) {$/;"	f	typeref:typename:void
q_dequeue	src/lib/structure/queue/queue.c	/^void q_dequeue(Queue* q, QEltype* order) {$/;"	f	typeref:typename:void
q_enqueue	src/lib/structure/queue/queue.c	/^void q_enqueue(Queue* q, QEltype order) {$/;"	f	typeref:typename:void
q_get_head	src/lib/structure/queue/queue.c	/^QEltype q_get_head(Queue q) { return (Q_HEAD(q)); }$/;"	f	typeref:typename:QEltype
q_get_tail	src/lib/structure/queue/queue.c	/^QEltype q_get_tail(Queue q) { return Q_TAIL(q); }/;"	f	typeref:typename:QEltype
q_is_empty	src/lib/structure/queue/queue.c	/^boolean q_is_empty(Queue q) {$/;"	f	typeref:typename:boolean
q_is_full	src/lib/structure/queue/queue.c	/^boolean q_is_full(Queue q) {$/;"	f	typeref:typename:boolean
q_length	src/lib/structure/queue/queue.c	/^int q_length(Queue q) {$/;"	f	typeref:typename:int
queue	src/lib/structure/queue/queue.h	/^typedef struct queue{$/;"	s
reach_nEff	src/lib/game/map/map.h	/^#define reach_nEff(/;"	d
reachable	src/lib/game/map/map.h	/^    DynamicList reachable;$/;"	m	struct:map	typeref:typename:DynamicList
reachable	src/lib/game/map/map.h	/^#define reachable(/;"	d
read_line	src/lib/console/console.c	/^void read_line(char* word, int length) {$/;"	f	typeref:typename:void
read_word	src/lib/console/console.c	/^void read_word(char* word, int length) {$/;"	f	typeref:typename:void
request	.vscode/launch.json	/^      "request": "launch",$/;"	s	object:configurations.0
request	.vscode/launch.json	/^      "request": "launch",$/;"	s	object:configurations.1
reset_color	src/lib/console/pcolor/pcolor.c	/^void reset_color() { printf("%s", __RESET_COLOR); }$/;"	f	typeref:typename:void
reset_decorator	src/lib/console/console.c	/^void reset_decorator() { reset_color(); }$/;"	f	typeref:typename:void
retval	src/lib/loadex/mesinkar.c	/^static int retval;$/;"	v	typeref:typename:int	file:
reveal	.vscode/tasks.json	/^        "reveal": "silent"$/;"	s	object:tasks.0.presentation
row	src/lib/game/map/map.h	/^    int row;$/;"	m	struct:map	typeref:typename:int
rowEff	src/lib/structure/matrix/matrix.h	/^  int rowEff;$/;"	m	struct:matrix	typeref:typename:int
run	Makefile	/^run: build_debug$/;"	t
s_create_stack	src/lib/structure/stack/stack.c	/^void s_create_stack(Stack* s) { S_IDX_TOP(*s) = IDX_UNDEF; }$/;"	f	typeref:typename:void
s_get_top	src/lib/structure/stack/stack.c	/^SEltype s_get_top(Stack s) { return S_TOP(s); }/;"	f	typeref:typename:SEltype
s_is_empty	src/lib/structure/stack/stack.c	/^boolean s_is_empty(Stack s) { return (S_IDX_TOP(s) == IDX_UNDEF); }$/;"	f	typeref:typename:boolean
s_is_full	src/lib/structure/stack/stack.c	/^boolean s_is_full(Stack s) { return (S_IDX_TOP(s) == S_MAX_SIZE - 1); }$/;"	f	typeref:typename:boolean
s_pop	src/lib/structure/stack/stack.c	/^void s_pop(Stack* s, SEltype* item) {$/;"	f	typeref:typename:void
s_push	src/lib/structure/stack/stack.c	/^void s_push(Stack* s, SEltype item) {$/;"	f	typeref:typename:void
s_status_game	src/lib/status_game/status_game.c	/^StatusGame s_status_game;$/;"	v	typeref:typename:StatusGame
set_bg_color	src/lib/console/pcolor/pcolor.c	/^void set_bg_color(Color color) { set_color(color); }$/;"	f	typeref:typename:void
set_color	src/lib/console/pcolor/pcolor.c	/^void set_color(Color color) { printf("%s", color); }$/;"	f	typeref:typename:void
set_decorator	src/lib/console/console.c	/^void set_decorator(Decorator dec) { printf("%s", dec); }$/;"	f	typeref:typename:void
set_text_color	src/lib/console/pcolor/pcolor.c	/^void set_text_color(Color color) { set_color(color); }$/;"	f	typeref:typename:void
setupCommands	.vscode/launch.json	/^      "setupCommands": [$/;"	a	object:configurations.0
setupCommands	.vscode/launch.json	/^      "setupCommands": [$/;"	a	object:configurations.1
sg_inc_time	src/lib/status_game/status_game.c	/^void sg_inc_time() { s_status_game.Waktu_Permainan++; }$/;"	f	typeref:typename:void
sg_reset_time	src/lib/status_game/status_game.c	/^void sg_reset_time() { s_status_game.Waktu_Permainan = 0; }$/;"	f	typeref:typename:void
show_help	src/views/help/help_page.c	/^void show_help(){$/;"	f	typeref:typename:void
show_inventory	src/views/inventory/inventory.c	/^void show_inventory(StatusGame* s_status_game) {$/;"	f	typeref:typename:void
show_load_game	src/views/load_save/load_save_page.c	/^void show_load_game(StatusGame *s_status_game)$/;"	f	typeref:typename:void
show_main_menu	src/views/mainmenu/mainmenu.c	/^void show_main_menu() {$/;"	f	typeref:typename:void
show_map	src/views/map/map_page.c	/^void show_map() {$/;"	f	typeref:typename:void
show_move	src/views/move/move.c	/^void show_move(StatusGame *s){$/;"	f	typeref:typename:void
show_page_buy	src/views/buy/buy_page.c	/^void show_page_buy(StatusGame *s_status_game){$/;"	f	typeref:typename:void
show_pickup	src/views/pickup/pickup_page.c	/^void show_pickup() {$/;"	f	typeref:typename:void
show_progress	src/views/progress/progress.c	/^void show_progress(StatusGame s_status_game) {$/;"	f	typeref:typename:void
show_return	src/views/return/return_page.c	/^void show_return() {}/;"	f	typeref:typename:void
show_save_game	src/views/load_save/load_save_page.c	/^void show_save_game(StatusGame s_status_game)$/;"	f	typeref:typename:void
show_to_do	src/views/to_do/to_do_page.c	/^void show_to_do(StatusGame s_status_game)$/;"	f	typeref:typename:void
sl_create_list	src/lib/structure/staticlist/staticlist.c	/^void sl_create_list(StaticList* sl) { sl->length = 0; }$/;"	f	typeref:typename:void
sl_delete_at	src/lib/structure/staticlist/staticlist.c	/^void sl_delete_at(StaticList* sl, SlEltype* deletedValue, int idx) {$/;"	f	typeref:typename:void
sl_delete_first	src/lib/structure/staticlist/staticlist.c	/^void sl_delete_first(StaticList* sl, SlEltype* deletedValue) {$/;"	f	typeref:typename:void
sl_delete_last	src/lib/structure/staticlist/staticlist.c	/^void sl_delete_last(StaticList* sl, SlEltype* deletedValue) {$/;"	f	typeref:typename:void
sl_elmt	src/lib/structure/staticlist/staticlist.h	/^#define sl_elmt(/;"	d
sl_index_of	src/lib/structure/staticlist/staticlist.c	/^int sl_index_of(StaticList sl, SlEltype value) {$/;"	f	typeref:typename:int
sl_insert_at	src/lib/structure/staticlist/staticlist.c	/^void sl_insert_at(StaticList* sl, SlEltype value, int idx) {$/;"	f	typeref:typename:void
sl_insert_first	src/lib/structure/staticlist/staticlist.c	/^void sl_insert_first(StaticList* sl, SlEltype value) {$/;"	f	typeref:typename:void
sl_insert_last	src/lib/structure/staticlist/staticlist.c	/^void sl_insert_last(StaticList* sl, SlEltype value) {$/;"	f	typeref:typename:void
sl_is_empty	src/lib/structure/staticlist/staticlist.c	/^boolean sl_is_empty(StaticList sl) { return !sl_length(sl); }$/;"	f	typeref:typename:boolean
sl_is_full	src/lib/structure/staticlist/staticlist.c	/^boolean sl_is_full(StaticList sl) { return sl_length(sl) == SL_CAPACITY; }$/;"	f	typeref:typename:boolean
sl_length	src/lib/structure/staticlist/staticlist.c	/^int sl_length(StaticList sl) { return sl.length; }$/;"	f	typeref:typename:int
stack	src/lib/structure/stack/stack.h	/^typedef struct stack$/;"	s
staticlist	src/lib/structure/staticlist/staticlist.h	/^typedef struct staticlist {$/;"	s
stopAtEntry	.vscode/launch.json	/^      "stopAtEntry": false,$/;"	b	object:configurations.0
stopAtEntry	.vscode/launch.json	/^      "stopAtEntry": false,$/;"	b	object:configurations.1
suite_char_machine	test/charmachine/suite.c	/^Suite* suite_char_machine() {$/;"	f	typeref:typename:Suite *
suite_dynamic_list	test/dynamiclist/suite.c	/^Suite* suite_dynamic_list() {$/;"	f	typeref:typename:Suite *
suite_matrix	test/matrix/suite.c	/^Suite* suite_matrix() {$/;"	f	typeref:typename:Suite *
suite_point	test/point/suite.c	/^Suite* suite_point() {$/;"	f	typeref:typename:Suite *
suite_td	test/todolist/suite.c	/^Suite* suite_td() {$/;"	f	typeref:typename:Suite *
suite_word_machine	test/wordmachine/suite.c	/^Suite* suite_word_machine() {$/;"	f	typeref:typename:Suite *
t_add_item	src/lib/game/tas/tas.c	/^void t_add_item(Tas *T, Item item) {$/;"	f	typeref:typename:void
t_cap	src/lib/game/tas/tas.h	/^#define t_cap(/;"	d
t_create_tas	src/lib/game/tas/tas.c	/^void t_create_tas(Tas *T) {$/;"	f	typeref:typename:void
t_increase_capacity	src/lib/game/tas/tas.c	/^void t_increase_capacity(Tas *T, int cap_inc) {$/;"	f	typeref:typename:void
t_is_empty	src/lib/game/tas/tas.c	/^boolean t_is_empty(Tas T) { return s_is_empty(t_isi(T)); }$/;"	f	typeref:typename:boolean
t_isi	src/lib/game/tas/tas.h	/^#define t_isi(/;"	d
t_take_item	src/lib/game/tas/tas.c	/^Item t_take_item(Tas *T) {$/;"	f	typeref:typename:Item
tas	src/lib/game/tas/tas.h	/^typedef struct tas {$/;"	s
tas_mobita	src/lib/status_game/status_game.h	/^  Tas tas_mobita;$/;"	m	struct:StatusGame	typeref:typename:Tas
tasks	.vscode/tasks.json	/^  "tasks": [$/;"	a
td_create	src/lib/game/td_list/td_list.c	/^void td_create(ToDoList *tdl) {$/;"	f	typeref:typename:void
td_getOrder	src/lib/game/td_list/td_list.c	/^Order td_getOrder(ToDoList tdl, int idx) {$/;"	f	typeref:typename:Order
td_insertTask	src/lib/game/td_list/td_list.c	/^void td_insertTask(ToDoList *tdl, Order order) {$/;"	f	typeref:typename:void
td_is_empty	src/lib/game/td_list/td_list.c	/^boolean td_is_empty(ToDoList tdl) {$/;"	f	typeref:typename:boolean
td_length	src/lib/game/td_list/td_list.c	/^int td_length(ToDoList tdl) {$/;"	f	typeref:typename:int
td_list	src/views/to_do/to_do_page.c	/^ToDoList td_list;$/;"	v	typeref:typename:ToDoList
td_removeTask	src/lib/game/td_list/td_list.c	/^void td_removeTask(ToDoList *tdl, Order *orderOut, int orderId) {$/;"	f	typeref:typename:void
td_removeTaskByIdx	src/lib/game/td_list/td_list.c	/^void td_removeTaskByIdx(ToDoList *tdl, Order *orderOut, int idx) {$/;"	f	typeref:typename:void
tdp_printOrder	src/views/to_do/to_do_page.c	/^void tdp_printOrder(Order order, int num)$/;"	f	typeref:typename:void
test	Makefile	/^test: clean .\/bin\/test$/;"	t
test_cm_buffer	test/charmachine/test_buffer.c	/^TCase* test_cm_buffer() {$/;"	f	typeref:typename:END_TEST TCase *
test_cm_file	test/charmachine/test_file.c	/^TCase* test_cm_file() {$/;"	f	typeref:typename:END_TEST TCase *
test_debug	Makefile	/^test_debug: clean .\/bin\/test$/;"	t
test_dl_konstruktor	test/dynamiclist/test_konstruktor.c	/^TCase* test_dl_konstruktor() {$/;"	f	typeref:typename:END_TEST TCase *
test_dl_operasi	test/dynamiclist/test_operasi.c	/^TCase* test_dl_operasi() {$/;"	f	typeref:typename:END_TEST TCase *
test_m_constructor	test/matrix/test_constructor.c	/^TCase *test_m_constructor()$/;"	f	typeref:typename:END_TEST TCase *
test_m_selector	test/matrix/test_selector.c	/^TCase *test_m_selector() {$/;"	f	typeref:typename:END_TEST TCase *
test_p_equality	test/point/test_equality.c	/^TCase* test_p_equality() {$/;"	f	typeref:typename:END_TEST TCase *
test_p_konstruktor	test/point/test_konstruktor.c	/^TCase* test_p_konstruktor() {$/;"	f	typeref:typename:END_TEST TCase *
test_td_constructor	test/todolist/test_constructor.c	/^TCase *test_td_constructor()$/;"	f	typeref:typename:END_TEST TCase *
test_td_insert_remove	test/todolist/test_insert_remove.c	/^TCase *test_td_insert_remove()$/;"	f	typeref:typename:END_TEST TCase *
test_wm_file	test/wordmachine/test_file.c	/^TCase* test_wm_file() {$/;"	f	typeref:typename:END_TEST TCase *
text	.vscode/launch.json	/^          "text": "-enable-pretty-printing",$/;"	s	object:configurations.0.setupCommands.0
text	.vscode/launch.json	/^          "text": "-enable-pretty-printing",$/;"	s	object:configurations.1.setupCommands.0
tipe	src/lib/prototype/order/building/building.h	/^  char tipe;$/;"	m	struct:building	typeref:typename:char
to_do_list	src/lib/status_game/status_game.h	/^  ToDoList to_do_list;$/;"	m	struct:StatusGame	typeref:typename:ToDoList
true	src/lib/boolean.h	/^#define true /;"	d
type	.vscode/launch.json	/^      "type": "cppdbg",$/;"	s	object:configurations.0
type	.vscode/launch.json	/^      "type": "cppdbg",$/;"	s	object:configurations.1
type	.vscode/tasks.json	/^      "type": "shell",$/;"	s	object:tasks.0
type	.vscode/tasks.json	/^      "type": "shell",$/;"	s	object:tasks.1
type	src/lib/prototype/order/item/item.h	/^  char type;$/;"	m	struct:item	typeref:typename:char
uang_mobita	src/lib/status_game/status_game.h	/^  int uang_mobita;$/;"	m	struct:StatusGame	typeref:typename:int
version	.vscode/tasks.json	/^  "version": "2.0.0",$/;"	s
windows	.vscode/launch.json	/^      "windows": {$/;"	o	object:configurations.0
windows	.vscode/launch.json	/^      "windows": {$/;"	o	object:configurations.1
wm_adv_word	src/lib/wordmachine/wordmachine.c	/^void wm_adv_word() {$/;"	f	typeref:typename:void
wm_current_word	src/lib/wordmachine/wordmachine.c	/^Word wm_current_word;$/;"	v	typeref:typename:Word
wm_end_word	src/lib/wordmachine/wordmachine.c	/^boolean wm_end_word;$/;"	v	typeref:typename:boolean
wm_set_blank	src/lib/wordmachine/wordmachine.c	/^void wm_set_blank(char* blank, int length) {$/;"	f	typeref:typename:void
wm_start_word	src/lib/wordmachine/wordmachine.c	/^void wm_start_word(void* stream) {$/;"	f	typeref:typename:void
word	src/lib/loadex/loadex.h	/^} word;$/;"	t	typeref:struct:__anon5dfb7f810108
word	src/lib/wordmachine/wordmachine.h	/^typedef struct word {$/;"	s
wordArray	src/lib/loadex/loadex.h	/^    char wordArray[maxLength + 1];$/;"	m	struct:__anon5dfb7f810108	typeref:typename:char[]
x	src/lib/prototype/order/building/point/point.h	/^  int x;$/;"	m	struct:point	typeref:typename:int
y	src/lib/prototype/order/building/point/point.h	/^  int y;$/;"	m	struct:point	typeref:typename:int
